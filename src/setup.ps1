# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Windows

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
function Write-ColorOutput($ForegroundColor) {
    $fc = $host.UI.RawUI.ForegroundColor
    $host.UI.RawUI.ForegroundColor = $ForegroundColor
    if ($args) {
        Write-Output $args
    }
    $host.UI.RawUI.ForegroundColor = $fc
}

function Print-Status($message) {
    Write-ColorOutput Blue "[INFO] $message"
}

function Print-Success($message) {
    Write-ColorOutput Green "[SUCCESS] $message"
}

function Print-Warning($message) {
    Write-ColorOutput Yellow "[WARNING] $message"
}

function Print-Error($message) {
    Write-ColorOutput Red "[ERROR] $message"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
Write-ColorOutput Blue "=================================================="
Write-ColorOutput Blue "    Portfolio Website - –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
Write-ColorOutput Blue "=================================================="
Write-Output ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Print-Status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
try {
    $dockerVersion = docker --version
    Print-Success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $dockerVersion"
}
catch {
    Print-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    Write-Output "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop: https://www.docker.com/products/docker-desktop/"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
try {
    $composeVersion = docker compose version
    $ComposeCmd = "docker compose"
    Print-Success "Docker Compose –¥–æ—Å—Ç—É–ø–µ–Ω"
}
catch {
    try {
        docker-compose --version | Out-Null
        $ComposeCmd = "docker-compose"
        Print-Success "Docker Compose –¥–æ—Å—Ç—É–ø–µ–Ω"
    }
    catch {
        Print-Error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
try {
    $gitVersion = git --version
    Print-Success "Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $gitVersion"
}
catch {
    Print-Warning "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
Print-Status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

if (!(Test-Path ".env")) {
    if (Test-Path ".env.example") {
        Copy-Item ".env.example" ".env"
        Print-Success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞"
    }
    else {
        Print-Warning ".env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –±–∞–∑–æ–≤—ã–π .env"
        @"
# Google Analytics (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
VITE_GA_ID=G-DEVELOPMENT

# Supabase Configuration (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
VITE_SUPABASE_URL=
VITE_SUPABASE_ANON_KEY=

# Development
NODE_ENV=development
"@ | Out-File -FilePath ".env" -Encoding utf8
    }
}
else {
    Print-Warning ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ"
}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
Write-Output ""
Print-Status "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
Write-Output "1) –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å hot reload)"
Write-Output "2) –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º"
Write-Output "3) –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
Write-Output "4) –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VS Code (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π)"

$choice = Read-Host "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4)"

switch ($choice) {
    "1" {
        Print-Status "–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        Print-Status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        Invoke-Expression "$ComposeCmd -f docker-compose.dev.yml down --remove-orphans"
        
        # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
        Print-Status "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        Invoke-Expression "$ComposeCmd -f docker-compose.dev.yml up --build -d"
        
        if ($LASTEXITCODE -eq 0) {
            Print-Success "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
            Print-Status "URL: http://localhost:5173"
            Print-Status "CMS –ø–∞—Ä–æ–ª—å (localStorage): admin123"
        }
        else {
            Print-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞!"
            exit 1
        }
    }
    "2" {
        Print-Status "–ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ..."
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        Print-Status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        Invoke-Expression "$ComposeCmd down --remove-orphans"
        
        # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
        Print-Status "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        Invoke-Expression "$ComposeCmd up --build -d"
        
        if ($LASTEXITCODE -eq 0) {
            Print-Success "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ!"
            Print-Status "URL: http://localhost:3000"
        }
        else {
            Print-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞!"
            exit 1
        }
    }
    "3" {
        Print-Status "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
        docker build -t portfolio-website .
        
        if ($LASTEXITCODE -eq 0) {
            Print-Success "Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
        }
        else {
            Print-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞!"
            exit 1
        }
    }
    "4" {
        Print-Status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VS Code..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ VS Code
        try {
            code --version | Out-Null
        }
        catch {
            Print-Error "VS Code –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            Write-Output "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ VS Code: https://code.visualstudio.com/"
            exit 1
        }
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        Print-Status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π..."
        
        $extensions = @(
            "ms-vscode.vscode-docker",
            "ms-vscode-remote.remote-containers",
            "bradlc.vscode-tailwindcss",
            "eamodio.gitlens",
            "esbenp.prettier-vscode",
            "dbaeumer.vscode-eslint",
            "ms-vscode.vscode-typescript-next"
        )
        
        foreach ($ext in $extensions) {
            Print-Status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $ext..."
            code --install-extension $ext
        }
        
        Print-Success "VS Code –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
        Print-Status "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç: code ."
    }
    default {
        Print-Error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"
        exit 1
    }
}

# –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
Write-Output ""
Write-ColorOutput Green "=================================================="
Write-ColorOutput Green "              –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
Write-ColorOutput Green "=================================================="
Write-Output ""
Print-Status "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
Write-Output "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:     $ComposeCmd logs -f"
Write-Output "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:          $ComposeCmd down"
Write-Output "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:         $ComposeCmd restart"
Write-Output "  –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: docker ps"
Write-Output ""
Print-Status "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
Write-Output "  - SUPABASE_INTEGRATION_GUIDE.md - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase"
Write-Output "  - LOCAL_DEVELOPMENT_GUIDE.md - –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
Write-Output ""
Print-Success "–ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ! üöÄ"